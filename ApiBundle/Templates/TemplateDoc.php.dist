<?php

namespace AppBundle\Controller\ApiDocs;

use AppBundle\Controller\TemplateController;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Method;
use Nelmio\ApiDocBundle\Annotation\ApiDoc;

/**
 * @Route("/api/v1/template")
 */
class TemplateDoc extends TemplateController
{
    /**
     * @ApiDoc(
     *  section="TemplateSection",
     *  description="Get all Templates",
     *  statusCodes = {
     *      200 = "Returned when successful",
     *      403 = "geoks.user.notConnected",
     *  },
     * )
     * @Route("", name="templates")
     * @Method({"GET"})
     *
     * @param boolean $secure
     * @return JsonResponse
     */
    public function getAllAction($secure = null)
    {
        return parent::getAllAction(false);
    }

    /**
     * @ApiDoc(
     *  section="TemplateSection",
     *  description="Get a Template",
     *  statusCodes = {
     *      200 = "Returned when successful",
     *      403 = "geoks.user.notConnected",
     *  },
     * )
     * @Route("/{id}", name="template", requirements={"id": "\d+"})
     * @Method({"GET"})
     *
     * @param integer $id
     * @return JsonResponse
     */
    public function getOneAction($id)
    {
        return parent::getOneAction($id);
    }

    /**
     * @ApiDoc(
     *  section="TemplateSection",
     *  description="Create a Template",
     *  statusCodes = {
     *      200 = "Returned when successful",
     *      403 = "geoks.user.notConnected",
     *  },
     * )
     * @Route("", name="template_create")
     * @Method({"POST"})
     *
     * @param Request $request
     * @param array $customSetters
     * @return JsonResponse
     */
    public function createAction(Request $request, $customSetters = [])
    {
        return parent::createAction($request, $customSetters);
    }

    /**
     * @ApiDoc(
     *  section="TemplateSection",
     *  description="Update a Template",
     *  statusCodes = {
     *      200 = "Returned when successful",
     *      403 = "geoks.user.notConnected",
     *  },
     * )
     * @Route("/{id}", name="template_update", requirements={"id": "\d+"})
     * @Method({"PATCH"})
     *
     * @param Request $request
     * @param integer $id
     * @param array $customSetters
     * @return JsonResponse
     */
    public function updateAction(Request $request, $id, $customSetters = [])
    {
        return parent::updateAction($request, $id, $customSetters);
    }

    /**
     * @ApiDoc(
     *  section="TemplateSection",
     *  description="Delete a Template",
     *  statusCodes = {
     *      200 = "Returned when successful",
     *      403 = "geoks.user.notConnected",
     *  },
     * )
     * @Route("/{id}", name="template_delete", requirements={"id": "\d+"})
     * @Method({"DELETE"})
     *
     * @param integer $id
     * @return JsonResponse
     */
    public function deleteAction($id)
    {
        return parent::deleteAction($id);
    }
}
