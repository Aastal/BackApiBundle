parameters:
    geoks.user_provider.class: Geoks\ApiBundle\Security\User\EntityUserProvider
    sms.api.url: null
    sms.api.key: null
    stripe.public.key: null
    stripe.private.key: null

    amazon.s3.version: null
    amazon.s3.region: null
    amazon.s3.key: null
    amazon.s3.secret: null
    amazon.s3.bucket: null

services:
    geoks.utils.string_manager:
        class: Geoks\ApiBundle\Utils\StringUtils

    geoks.utils.image:
        class: Geoks\ApiBundle\Utils\ImageUtil

    geoks.utils.calc:
        class: Geoks\ApiBundle\Utils\CalcUtil

    geoks.utils.regex:
        class: Geoks\ApiBundle\Utils\RegexUtils

    # Old version #
    geoks.api.regex_utils:
        class: Geoks\ApiBundle\Utils\RegexUtils

    geoks.api.pluralization:
        class: Geoks\ApiBundle\Services\Pluralization

    geoks.api.geo:
        class: Geoks\ApiBundle\Services\Geo

    geoks.api.serializer:
        class: Geoks\ApiBundle\Services\Serializer
        arguments: [ "@service_container", "@jms_serializer", "%geoks_api.class_pluralize%" ]

    geoks.api.mailer:
        class: Geoks\ApiBundle\Services\AppMailer
        arguments: [ "@service_container", "@translator", "@hip_mandrill.dispatcher", "@router" ]

    geoks.api.pushnotifications:
        class: Geoks\ApiBundle\Services\PushNotify
        arguments: [ "%google.fcm.api.key%", "@translator", "@service_container" ]

    geoks.api.sms:
        class: Geoks\ApiBundle\Services\SmsSender
        arguments: ["%sms.api.url%", "%sms.api.key%", "@logger"]

    geoks.api.oauth.facebook_extension:
        class: Geoks\ApiBundle\OAuth\FacebookGrantExtension
        tags:
            - { name: fos_oauth_server.grant_extension, uri: "%facebook_grant_type%" }
        arguments: [ "@service_container", "@doctrine.orm.entity_manager" ]

    geoks.user_provider:
        class: "%geoks.user_provider.class%"
        arguments: ["@doctrine", "%geoks_api.user_class%", { facebook: "%facebook_app_id%" }, "@service_container", "@session", "@security.token_storage"]

    geoks.apikey_authenticator:
        class:  Geoks\ApiBundle\Security\User\ApiKeyAuthenticator
        public: false

    geoks.uploader:
        class: Geoks\ApiBundle\Services\FileUploader

    geoks.api.stripe:
        class: Geoks\ApiBundle\Services\StripePayment
        arguments: [ "%stripe.private.key%", "%stripe.public.key%" ]

    geoks.aws_s3.client:
        class: Aws\S3\S3Client
        factory: [Aws\S3\S3Client, 'factory']
        arguments:
            -
              version: "%amazon.s3.version%"
              region: "%amazon.s3.region%"
              credentials: "@geoks.aws_s3.credentials"

    geoks.aws_s3.credentials:
        class: Aws\Credentials\Credentials
        arguments: ["%amazon.s3.key%", "%amazon.s3.secret%"]

    geoks.imagine.cache.resolver.amazon_s3:
        class: Liip\ImagineBundle\Imagine\Cache\Resolver\AwsS3Resolver
        arguments:
            - "@geoks.aws_s3.client"
            - "%amazon.s3.bucket%"
        tags:
            - { name: "liip_imagine.cache.resolver", resolver: "amazon_s3" }

    geoks.entity_pre_persist:
        class: Geoks\ApiBundle\EventListener\Base64HandleSubscriber
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    geoks.entity_subscriber:
        class: Geoks\ApiBundle\EventListener\EntitySubscriber
        arguments: ["@service_container"]
        tags:
            - { name: jms_serializer.event_subscriber }

    geoks.api.aws:
        class: Geoks\ApiBundle\Services\Aws
        arguments: [ "@service_container" ]
